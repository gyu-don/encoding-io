var searchIndex = {};
searchIndex["bufstream"] = {"doc":"A crate for separately buffered streams.","items":[[3,"BufStream","bufstream","Wraps a Stream and buffers input and output to and from it.",null,null],[3,"IntoInnerError","","An error returned by `into_inner` which combines an error that happened while writing out the buffer, and the buffered writer object which may be used to recover from the condition.",null,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"error","","Returns the error which caused the call to `into_inner()` to fail.",1,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"into_inner","","Returns the buffered writer instance which generated the error.",1,{"inputs":[{"name":"self"}],"output":{"name":"w"}}],[11,"description","","",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"with_capacities","","Creates a new buffered stream with explicitly listed capacities for the reader/writer buffer.",0,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"s"}],"output":{"name":"bufstream"}}],[11,"new","","Creates a new buffered stream with the default reader/writer buffer capacities.",0,{"inputs":[{"name":"s"}],"output":{"name":"bufstream"}}],[11,"get_ref","","Gets a reference to the underlying stream.",0,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Gets a mutable reference to the underlying stream.",0,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Unwraps this `BufStream`, returning the underlying stream.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"fill_buf","","",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"consume","","",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"read_until","","",0,{"inputs":[{"name":"self"},{"name":"u8"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_line","","",0,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"result"}}],[11,"read","","",0,null],[11,"write","","",0,null],[11,"flush","","",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}]],"paths":[[3,"BufStream"],[3,"IntoInnerError"]]};
searchIndex["cfg_if"] = {"doc":"A macro for defining #[cfg] if-else statements.","items":[[14,"cfg_if","cfg_if","",null,null]],"paths":[]};
searchIndex["encoding_io"] = {"doc":"This crate is for handling non-utf8 text file on Rust. `TextReader` is a reader which decodes non-utf8 text to utf8 text. `TextWriter` is a writer which encodes utf8 text to non-utf8 text.","items":[[3,"TextReader","encoding_io","`TextReader` is a wrapper for a non-utf8 encoded text reader. It behaves as a utf8 encoded text reader.",null,null],[3,"TextWriter","","`TextWriter` is a wrapper for writer. It encodes given bytes to utf8 then write to a writer.",null,null],[11,"new","","Creates a new `TextReader` with a default buffer capacity.",0,{"inputs":[{"name":"r"},{"name":"encoding"}],"output":{"name":"textreader"}}],[11,"with_capacity","","Creates a new `TextReader` with the specified buffer capacity.",0,{"inputs":[{"name":"r"},{"name":"encoding"},{"name":"usize"},{"name":"usize"}],"output":{"name":"textreader"}}],[11,"with_decoder","","Creates a new `TextReader` with the specified decoder and a default buffer capacity.",0,{"inputs":[{"name":"r"},{"name":"decoder"}],"output":{"name":"textreader"}}],[11,"with_decoder_and_capacity","","Creates a new `TextReader` with the specified decoder and specified buffer capacity.",0,{"inputs":[{"name":"r"},{"name":"decoder"},{"name":"usize"},{"name":"usize"}],"output":{"name":"textreader"}}],[11,"into_decoder","","Consumes the `TextReader` and returns the underlying decoder.",0,{"inputs":[{"name":"self"}],"output":{"name":"decoder"}}],[11,"into_inner","","Consumes the `TextReader` and returns the underlying reader.",0,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"into_decoder_and_inner","","Consumes the `TextReader` and returns the underlying reader and decoder.",0,null],[11,"read","","",0,null],[11,"fill_buf","","",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"consume","","",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"new","","Creates a new `TextWriter` with a default buffer capacity.",1,{"inputs":[{"name":"w"},{"name":"encoding"}],"output":{"name":"textwriter"}}],[11,"with_capacity","","Creates a new `TextWriter` with the specified buffer capacity.",1,{"inputs":[{"name":"w"},{"name":"encoding"},{"name":"usize"}],"output":{"name":"textwriter"}}],[11,"with_encoder","","Creates a new `TextWriter` with the specified encoder.",1,{"inputs":[{"name":"w"},{"name":"encoder"}],"output":{"name":"textwriter"}}],[11,"with_encoder_and_capacity","","Creates a new `TextWriter` with the specified encoder and specified buffer capacity.",1,{"inputs":[{"name":"w"},{"name":"encoder"},{"name":"usize"}],"output":{"name":"textwriter"}}],[11,"into_encoder","","Consumes the `TextWriter` and returns the underlying encoder.",1,{"inputs":[{"name":"self"}],"output":{"name":"encoder"}}],[11,"into_inner","","Consumes the `TextWriter` and returns the underlying writer.",1,{"inputs":[{"name":"self"}],"output":{"name":"w"}}],[11,"into_encoder_and_inner","","Consumes the `TextWriter` and returns the underlying writer and encoder.",1,null],[11,"finish","","Notice to encoder that the end of the stream is reached when all the characters in src have been consumed. This argument is needed for ISO-2022-JP and is ignored for other encodings.",1,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"write","","",1,null],[11,"flush","","",1,{"inputs":[{"name":"self"}],"output":{"name":"result"}}]],"paths":[[3,"TextReader"],[3,"TextWriter"]]};
searchIndex["encoding_rs"] = {"doc":"encoding_rs is a Gecko-oriented Free Software / Open Source implementation of the Encoding Standard in Rust. Gecko-oriented means that converting to and from UTF-16 is supported in addition to converting to and from UTF-8, that the performance and streamability goals are browser-oriented, and that FFI-friendliness is a goal.","items":[[3,"Encoding","encoding_rs","An encoding as defined in the [Encoding Standard][1].",null,null],[3,"Decoder","","A converter that decodes a byte stream into Unicode according to a character encoding in a streaming (incremental) manner.",null,null],[3,"Encoder","","A converter that encodes a Unicode stream into bytes according to a character encoding in a streaming (incremental) manner.",null,null],[4,"CoderResult","","Result of a (potentially partial) decode or encode operation with replacement.",null,null],[13,"InputEmpty","","The input was exhausted.",0,null],[13,"OutputFull","","The converter cannot produce another unit of output, because the output buffer does not have enough space left.",0,null],[4,"DecoderResult","","Result of a (potentially partial) decode operation without replacement.",null,null],[13,"InputEmpty","","The input was exhausted.",1,null],[13,"OutputFull","","The decoder cannot produce another unit of output, because the output buffer does not have enough space left.",1,null],[13,"Malformed","","The decoder encountered a malformed byte sequence.",1,null],[4,"EncoderResult","","Result of a (potentially partial) encode operation without replacement.",null,null],[13,"InputEmpty","","The input was exhausted.",2,null],[13,"OutputFull","","The encoder cannot produce another unit of output, because the output buffer does not have enough space left.",2,null],[13,"Unmappable","","The encoder encountered an unmappable character.",2,null],[7,"BIG5_INIT","","The initializer for the Big5 encoding.",null,null],[7,"BIG5","","The Big5 encoding.",null,null],[7,"EUC_JP_INIT","","The initializer for the EUC-JP encoding.",null,null],[7,"EUC_JP","","The EUC-JP encoding.",null,null],[7,"EUC_KR_INIT","","The initializer for the EUC-KR encoding.",null,null],[7,"EUC_KR","","The EUC-KR encoding.",null,null],[7,"GBK_INIT","","The initializer for the GBK encoding.",null,null],[7,"GBK","","The GBK encoding.",null,null],[7,"IBM866_INIT","","The initializer for the IBM866 encoding.",null,null],[7,"IBM866","","The IBM866 encoding.",null,null],[7,"ISO_2022_JP_INIT","","The initializer for the ISO-2022-JP encoding.",null,null],[7,"ISO_2022_JP","","The ISO-2022-JP encoding.",null,null],[7,"ISO_8859_10_INIT","","The initializer for the ISO-8859-10 encoding.",null,null],[7,"ISO_8859_10","","The ISO-8859-10 encoding.",null,null],[7,"ISO_8859_13_INIT","","The initializer for the ISO-8859-13 encoding.",null,null],[7,"ISO_8859_13","","The ISO-8859-13 encoding.",null,null],[7,"ISO_8859_14_INIT","","The initializer for the ISO-8859-14 encoding.",null,null],[7,"ISO_8859_14","","The ISO-8859-14 encoding.",null,null],[7,"ISO_8859_15_INIT","","The initializer for the ISO-8859-15 encoding.",null,null],[7,"ISO_8859_15","","The ISO-8859-15 encoding.",null,null],[7,"ISO_8859_16_INIT","","The initializer for the ISO-8859-16 encoding.",null,null],[7,"ISO_8859_16","","The ISO-8859-16 encoding.",null,null],[7,"ISO_8859_2_INIT","","The initializer for the ISO-8859-2 encoding.",null,null],[7,"ISO_8859_2","","The ISO-8859-2 encoding.",null,null],[7,"ISO_8859_3_INIT","","The initializer for the ISO-8859-3 encoding.",null,null],[7,"ISO_8859_3","","The ISO-8859-3 encoding.",null,null],[7,"ISO_8859_4_INIT","","The initializer for the ISO-8859-4 encoding.",null,null],[7,"ISO_8859_4","","The ISO-8859-4 encoding.",null,null],[7,"ISO_8859_5_INIT","","The initializer for the ISO-8859-5 encoding.",null,null],[7,"ISO_8859_5","","The ISO-8859-5 encoding.",null,null],[7,"ISO_8859_6_INIT","","The initializer for the ISO-8859-6 encoding.",null,null],[7,"ISO_8859_6","","The ISO-8859-6 encoding.",null,null],[7,"ISO_8859_7_INIT","","The initializer for the ISO-8859-7 encoding.",null,null],[7,"ISO_8859_7","","The ISO-8859-7 encoding.",null,null],[7,"ISO_8859_8_INIT","","The initializer for the ISO-8859-8 encoding.",null,null],[7,"ISO_8859_8","","The ISO-8859-8 encoding.",null,null],[7,"ISO_8859_8_I_INIT","","The initializer for the ISO-8859-8-I encoding.",null,null],[7,"ISO_8859_8_I","","The ISO-8859-8-I encoding.",null,null],[7,"KOI8_R_INIT","","The initializer for the KOI8-R encoding.",null,null],[7,"KOI8_R","","The KOI8-R encoding.",null,null],[7,"KOI8_U_INIT","","The initializer for the KOI8-U encoding.",null,null],[7,"KOI8_U","","The KOI8-U encoding.",null,null],[7,"SHIFT_JIS_INIT","","The initializer for the Shift_JIS encoding.",null,null],[7,"SHIFT_JIS","","The Shift_JIS encoding.",null,null],[7,"UTF_16BE_INIT","","The initializer for the UTF-16BE encoding.",null,null],[7,"UTF_16BE","","The UTF-16BE encoding.",null,null],[7,"UTF_16LE_INIT","","The initializer for the UTF-16LE encoding.",null,null],[7,"UTF_16LE","","The UTF-16LE encoding.",null,null],[7,"UTF_8_INIT","","The initializer for the UTF-8 encoding.",null,null],[7,"UTF_8","","The UTF-8 encoding.",null,null],[7,"GB18030_INIT","","The initializer for the gb18030 encoding.",null,null],[7,"GB18030","","The gb18030 encoding.",null,null],[7,"MACINTOSH_INIT","","The initializer for the macintosh encoding.",null,null],[7,"MACINTOSH","","The macintosh encoding.",null,null],[7,"REPLACEMENT_INIT","","The initializer for the replacement encoding.",null,null],[7,"REPLACEMENT","","The replacement encoding.",null,null],[7,"WINDOWS_1250_INIT","","The initializer for the windows-1250 encoding.",null,null],[7,"WINDOWS_1250","","The windows-1250 encoding.",null,null],[7,"WINDOWS_1251_INIT","","The initializer for the windows-1251 encoding.",null,null],[7,"WINDOWS_1251","","The windows-1251 encoding.",null,null],[7,"WINDOWS_1252_INIT","","The initializer for the windows-1252 encoding.",null,null],[7,"WINDOWS_1252","","The windows-1252 encoding.",null,null],[7,"WINDOWS_1253_INIT","","The initializer for the windows-1253 encoding.",null,null],[7,"WINDOWS_1253","","The windows-1253 encoding.",null,null],[7,"WINDOWS_1254_INIT","","The initializer for the windows-1254 encoding.",null,null],[7,"WINDOWS_1254","","The windows-1254 encoding.",null,null],[7,"WINDOWS_1255_INIT","","The initializer for the windows-1255 encoding.",null,null],[7,"WINDOWS_1255","","The windows-1255 encoding.",null,null],[7,"WINDOWS_1256_INIT","","The initializer for the windows-1256 encoding.",null,null],[7,"WINDOWS_1256","","The windows-1256 encoding.",null,null],[7,"WINDOWS_1257_INIT","","The initializer for the windows-1257 encoding.",null,null],[7,"WINDOWS_1257","","The windows-1257 encoding.",null,null],[7,"WINDOWS_1258_INIT","","The initializer for the windows-1258 encoding.",null,null],[7,"WINDOWS_1258","","The windows-1258 encoding.",null,null],[7,"WINDOWS_874_INIT","","The initializer for the windows-874 encoding.",null,null],[7,"WINDOWS_874","","The windows-874 encoding.",null,null],[7,"X_MAC_CYRILLIC_INIT","","The initializer for the x-mac-cyrillic encoding.",null,null],[7,"X_MAC_CYRILLIC","","The x-mac-cyrillic encoding.",null,null],[7,"X_USER_DEFINED_INIT","","The initializer for the x-user-defined encoding.",null,null],[7,"X_USER_DEFINED","","The x-user-defined encoding.",null,null],[11,"for_label","","Implements the get an encoding algorithm.",3,null],[11,"for_label_no_replacement","","This method behaves the same as `for_label()`, except when `for_label()` would return `Some(REPLACEMENT)`, this method returns `None` instead.",3,null],[11,"for_bom","","Performs non-incremental BOM sniffing.",3,null],[11,"for_name","","If the argument matches exactly (case-sensitively; no whitespace removal performed) the name of an encoding, returns `&'static Encoding` representing that encoding. Otherwise panics.",3,null],[11,"name","","Returns the name of this encoding.",3,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"can_encode_everything","","Checks whether the output encoding of this encoding can encode every `char`. (Only true if the output encoding is UTF-8.)",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_ascii_compatible","","Checks whether the bytes 0x00...0x7F map exclusively to the characters U+0000...U+007F and vice versa.",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"output_encoding","","Returns the output encoding of this encoding. This is UTF-8 for UTF-16BE, UTF-16LE and replacement and the encoding itself otherwise.",3,{"inputs":[{"name":"self"}],"output":{"name":"encoding"}}],[11,"decode","","Decode complete input to `Cow<'a, str>` with BOM sniffing and with malformed sequences replaced with the REPLACEMENT CHARACTER when the entire input is available as a single buffer (i.e. the end of the buffer marks the end of the stream).",3,null],[11,"decode_with_bom_removal","","Decode complete input to `Cow<'a, str>` with BOM removal and with malformed sequences replaced with the REPLACEMENT CHARACTER when the entire input is available as a single buffer (i.e. the end of the buffer marks the end of the stream).",3,null],[11,"decode_without_bom_handling","","Decode complete input to `Cow<'a, str>` without BOM handling and with malformed sequences replaced with the REPLACEMENT CHARACTER when the entire input is available as a single buffer (i.e. the end of the buffer marks the end of the stream).",3,null],[11,"decode_without_bom_handling_and_without_replacement","","Decode complete input to `Cow<'a, str>` without BOM handling and with malformed sequences treated as fatal when the entire input is available as a single buffer (i.e. the end of the buffer marks the end of the stream).",3,null],[11,"encode","","Encode complete input to `Cow<'a, [u8]>` with unmappable characters replaced with decimal numeric character references when the entire input is available as a single buffer (i.e. the end of the buffer marks the end of the stream).",3,null],[11,"new_decoder","","Instantiates a new decoder for this encoding with BOM sniffing enabled.",3,{"inputs":[{"name":"self"}],"output":{"name":"decoder"}}],[11,"new_decoder_with_bom_removal","","Instantiates a new decoder for this encoding with BOM removal.",3,{"inputs":[{"name":"self"}],"output":{"name":"decoder"}}],[11,"new_decoder_without_bom_handling","","Instantiates a new decoder for this encoding with BOM handling disabled.",3,{"inputs":[{"name":"self"}],"output":{"name":"decoder"}}],[11,"new_encoder","","Instantiates a new encoder for the output encoding of this encoding.",3,{"inputs":[{"name":"self"}],"output":{"name":"encoder"}}],[11,"utf8_valid_up_to","","Validates UTF-8.",3,null],[11,"ascii_valid_up_to","","Validates ASCII.",3,null],[11,"iso_2022_jp_ascii_valid_up_to","","Validates ISO-2022-JP ASCII-state data.",3,null],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"encoding"}],"output":{"name":"bool"}}],[11,"hash","","",3,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"coderresult"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"decoderresult"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"decoderresult"}],"output":{"name":"bool"}}],[11,"encoding","","The `Encoding` this `Decoder` is for.",4,{"inputs":[{"name":"self"}],"output":{"name":"encoding"}}],[11,"max_utf8_buffer_length","","Query the worst-case UTF-8 output size with replacement.",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"max_utf8_buffer_length_without_replacement","","Query the worst-case UTF-8 output size without replacement.",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"decode_to_utf8","","Incrementally decode a byte stream into UTF-8 with malformed sequences replaced with the REPLACEMENT CHARACTER.",4,null],[11,"decode_to_str","","Incrementally decode a byte stream into UTF-8 with malformed sequences replaced with the REPLACEMENT CHARACTER with type system signaling of UTF-8 validity.",4,null],[11,"decode_to_string","","Incrementally decode a byte stream into UTF-8 with malformed sequences replaced with the REPLACEMENT CHARACTER using a `String` receiver.",4,null],[11,"decode_to_utf8_without_replacement","","Incrementally decode a byte stream into UTF-8 without replacement.",4,null],[11,"decode_to_str_without_replacement","","Incrementally decode a byte stream into UTF-8 with type system signaling of UTF-8 validity.",4,null],[11,"decode_to_string_without_replacement","","Incrementally decode a byte stream into UTF-8 using a `String` receiver.",4,null],[11,"max_utf16_buffer_length","","Query the worst-case UTF-16 output size (with or without replacement).",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"decode_to_utf16","","Incrementally decode a byte stream into UTF-16 with malformed sequences replaced with the REPLACEMENT CHARACTER.",4,null],[11,"decode_to_utf16_without_replacement","","Incrementally decode a byte stream into UTF-16 without replacement.",4,null],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"encoderresult"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"encoderresult"}],"output":{"name":"bool"}}],[11,"encoding","","The `Encoding` this `Encoder` is for.",5,{"inputs":[{"name":"self"}],"output":{"name":"encoding"}}],[11,"has_pending_state","","Returns `true` if this is an ISO-2022-JP encoder that's not in the ASCII state and `false` otherwise.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"max_buffer_length_from_utf8_if_no_unmappables","","Query the worst-case output size when encoding from UTF-8 with replacement.",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"max_buffer_length_from_utf8_without_replacement","","Query the worst-case output size when encoding from UTF-8 without replacement.",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"encode_from_utf8","","Incrementally encode into byte stream from UTF-8 with unmappable characters replaced with HTML (decimal) numeric character references.",5,null],[11,"encode_from_utf8_to_vec","","Incrementally encode into byte stream from UTF-8 with unmappable characters replaced with HTML (decimal) numeric character references.",5,null],[11,"encode_from_utf8_without_replacement","","Incrementally encode into byte stream from UTF-8 without replacement.",5,null],[11,"encode_from_utf8_to_vec_without_replacement","","Incrementally encode into byte stream from UTF-8 without replacement.",5,null],[11,"max_buffer_length_from_utf16_if_no_unmappables","","Query the worst-case output size when encoding from UTF-16 with replacement.",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"max_buffer_length_from_utf16_without_replacement","","Query the worst-case output size when encoding from UTF-16 without replacement.",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"encode_from_utf16","","Incrementally encode into byte stream from UTF-16 with unmappable characters replaced with HTML (decimal) numeric character references.",5,null],[11,"encode_from_utf16_without_replacement","","Incrementally encode into byte stream from UTF-16 without replacement.",5,null]],"paths":[[4,"CoderResult"],[4,"DecoderResult"],[4,"EncoderResult"],[3,"Encoding"],[3,"Decoder"],[3,"Encoder"]]};
initSearch(searchIndex);
